#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ 2FA –∫–æ–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import pyotp
import time
from datetime import datetime

def generate_test_codes():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ 2FA –∫–æ–¥—ã"""
    
    # –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º)
    secret_key = "JBSWY3DPEHPK3PXP"
    
    # –°–æ–∑–¥–∞–µ–º TOTP –æ–±—ä–µ–∫—Ç
    totp = pyotp.TOTP(secret_key)
    
    print("üîê –¢–ï–°–¢–û–í–´–ï 2FA –ö–û–î–´")
    print("=" * 50)
    print(f"–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á: {secret_key}")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
    print("-" * 50)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–¥–æ–≤
    for i in range(5):
        current_time = int(time.time())
        code = totp.at(current_time)
        remaining_time = 30 - (current_time % 30)
        
        print(f"–ö–æ–¥ {i+1}: {code} (–æ—Å—Ç–∞–ª–æ—Å—å {remaining_time} —Å–µ–∫)")
        time.sleep(1)
    
    print("=" * 50)
    print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö –∫–æ–¥–æ–≤ –¥–ª—è –≤—Ö–æ–¥–∞!")
    print("üí° –ö–æ–¥—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥")

if __name__ == "__main__":
    generate_test_codes()
