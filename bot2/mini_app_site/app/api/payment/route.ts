import { NextRequest, NextResponse } from 'next/server'

const ADMIN_API_URL = process.env.ADMIN_API_URL || (process.env.NODE_ENV === 'production' ? 'https://xendro.pro' : 'http://localhost:3001')

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    
    console.log('üîÑ Next.js API: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏:', body)
    
    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ API
    const response = await fetch(`${ADMIN_API_URL}/api/payment`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(body)
    })
    
    if (!response.ok) {
      const errorText = await response.text()
      console.error('‚ùå Admin API error:', response.status, errorText)
      return NextResponse.json(
        { error: `Admin API error: ${response.status} - ${errorText}` },
        { status: response.status }
      )
    }
    
    const data = await response.json()
    console.log('‚úÖ Next.js API: –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', data)
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–∞–π—Ç
    if (data.data && data.data.id) {
      return NextResponse.json({
        success: true,
        transactionId: data.data.id,
        id: data.data.id,
        message: data.data.message || '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞'
      })
    }
    
    return NextResponse.json(data)
    
  } catch (error) {
    console.error('‚ùå Next.js API error:', error)
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    )
  }
}

export async function PUT(request: NextRequest) {
  try {
    const body = await request.json()
    
    console.log('üîÑ Next.js API: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏:', body)
    
    // –ü—Ä–æ–∫—Å–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ API
    const response = await fetch(`${ADMIN_API_URL}/api/payment`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(body)
    })
    
    if (!response.ok) {
      const errorText = await response.text()
      console.error('‚ùå Admin API error:', response.status, errorText)
      return NextResponse.json(
        { error: `Admin API error: ${response.status} - ${errorText}` },
        { status: response.status }
      )
    }
    
    const data = await response.json()
    console.log('‚úÖ Next.js API: –ó–∞—è–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', data)
    
    return NextResponse.json(data)
    
  } catch (error) {
    console.error('‚ùå Next.js API error:', error)
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    )
  }
}
