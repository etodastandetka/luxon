#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π Telegram-–±–æ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç
"""
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
# –ü—Ä–æ—Å—Ç–æ–π –±–æ—Ç –±–µ–∑ –∫–Ω–æ–ø–æ–∫
from aiogram.filters import CommandStart

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "7796879640:AAFKi7SFuqNJKUv8hapAYFeeJsFN3OCJF0Y"
WEBSITE_URL = "https://localhost:3030"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def start_command(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer(
        "üéØ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LUXON!**\n\n"
        "üåê **–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç:**\n"
        f"üîó {WEBSITE_URL}\n\n"
        "**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
        "üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞\n"
        "üí∏ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤\n"
        "üìä –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π\n"
        "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n"
        "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n"
        "üéß –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ!",
        parse_mode="Markdown"
    )


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ Telegram-–±–æ—Ç–∞...")
    print("=" * 50)
    print("üì± –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:")
    print("üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç")
    print("üí∏ –í—ã–≤–æ–¥ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç") 
    print("üìú –ò—Å—Ç–æ—Ä–∏—è - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç")
    print("üë• –†–µ—Ñ–µ—Ä–∞–ª—ã - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç")
    print("üéß –ü–æ–¥–¥–µ—Ä–∂–∫–∞ - –∫–æ–Ω—Ç–∞–∫—Ç—ã")
    print("=" * 50)
    
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())
